/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.99
 * Generated at: 2025-05-12 11:04:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com.dualaccess.db.DBConnection;

public final class download_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

if (session == null || session.getAttribute("username") == null) {
	response.sendRedirect("index.jsp");
	return;
}

String department = (String) session.getAttribute("department");

Connection conn = null;
PreparedStatement ps = null;
ResultSet rs = null;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Download Files</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css\">\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("\tbackground-image: url(\"images/background.jpg\");\r\n");
      out.write("\tbackground-size: cover;\r\n");
      out.write("\tbackground-position: center;\r\n");
      out.write("\tbackground-repeat: no-repeat;\r\n");
      out.write("\tfont-family: Arial, sans-serif;\r\n");
      out.write("\tpadding: 30px 10px;\r\n");
      out.write("\tmin-height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container-bg {\r\n");
      out.write("\tbackground-color: rgba(255, 255, 255, 0.95);\r\n");
      out.write("\tpadding: 30px;\r\n");
      out.write("\tborder-radius: 15px;\r\n");
      out.write("\tbox-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".file-card {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder-radius: 10px;\r\n");
      out.write("\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n");
      out.write("\tpadding: 15px;\r\n");
      out.write("\tmargin-bottom: 25px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\ttransition: 0.3s ease;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".file-card:hover {\r\n");
      out.write("\ttransform: translateY(-5px);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".file-preview {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 180px;\r\n");
      out.write("\tobject-fit: contain;\r\n");
      out.write("\tborder-radius: 8px;\r\n");
      out.write("\tmargin-bottom: 10px;\r\n");
      out.write("\tbackground-color: #f0f0f0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".file-name {\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tfont-size: 1rem;\r\n");
      out.write("\tmargin-bottom: 10px;\r\n");
      out.write("\tword-break: break-all;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".download-btn {\r\n");
      out.write("\tbackground-color: #007bff;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tpadding: 8px 16px;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".download-btn:hover {\r\n");
      out.write("\tbackground-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container container-bg\">\r\n");
      out.write("\t\t");

		String downloadError = (String) session.getAttribute("downloadError");
		if (downloadError != null) {
		
      out.write("\r\n");
      out.write("\t\t<div class=\"alert alert-warning text-center\">\r\n");
      out.write("\t\t\t");
      out.print(downloadError);
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

		session.removeAttribute("downloadError"); // Clear after showing
		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<h3 class=\"text-center mb-4\">\r\n");
      out.write("\t\t\tFiles Available for\r\n");
      out.write("\t\t\t");
      out.print(department);
      out.write("\r\n");
      out.write("\t\t\tDepartment\r\n");
      out.write("\t\t</h3>\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t");

			try {
				conn = DBConnection.getConnection();
				ps = conn.prepareStatement("SELECT filename FROM files WHERE department=?");
				ps.setString(1, department);
				rs = ps.executeQuery();

				while (rs.next()) {
					String file = rs.getString("filename");
					String displayName = file.contains("_") ? file.substring(file.indexOf("_") + 1) : file;
					String encodedFile = java.net.URLEncoder.encode(file, "UTF-8");

					String lower = file.toLowerCase();
					boolean isImage = lower.endsWith(".png") || lower.endsWith(".jpg") || lower.endsWith(".jpeg")
					|| lower.endsWith(".gif");
					String previewSrc = isImage ? "DownloadServlet?file=" + encodedFile : "images/file-icon.png";
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"col-lg-3 col-md-4 col-sm-6 col-12 d-flex\">\r\n");
      out.write("\t\t\t\t<div class=\"file-card w-100\">\r\n");
      out.write("\t\t\t\t\t<img src=\"");
      out.print(previewSrc);
      out.write("\" class=\"file-preview\" alt=\"Preview\" />\r\n");
      out.write("\t\t\t\t\t<div class=\"file-name\">");
      out.print(displayName);
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t<a href=\"DownloadServlet?file=");
      out.print(encodedFile);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"download-btn\"> <i class=\"bi bi-download\"></i> Download\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t");

			}
			} catch (Exception e) {
			out.println("<p class='text-danger text-center'>Error: " + e.getMessage() + "</p>");
			} finally {
			if (rs != null)
			try {
				rs.close();
			} catch (SQLException e) {
			}
			if (ps != null)
			try {
				ps.close();
			} catch (SQLException e) {
			}
			if (conn != null)
			try {
				conn.close();
			} catch (SQLException e) {
			}
			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"text-center mt-4\">\r\n");
      out.write("\t\t\t<a href=\"welcome.jsp\" class=\"btn btn-secondary\">Back to Dashboard</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
